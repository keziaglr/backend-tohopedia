type Product{
    id: Int!
    name: String!
    description: String!
    price: Int!
    discount: Int!
    addedTime: Time!
    stock: Int!
    rating: Int!
    soldCount: Int!
    
    sub_category_id: Int!
    sub_category: SubCategory!
    metaData: [MetaData!]!
    images: [ProductImage!]!
    review: [Review]

    createdAt: Time!
    updatedAt: Time!
    deletedAt: Time!
}

type ProductImage{
    id: Int!
    url: String!
}

type MetaData{
    id: Int!
    label: String!
    value: String!
}

input Filter{
    type: [Int]
    location: [String]
    minPrice: Int
    maxPrice: Int
    courier: [Int]
    rating: Int
    shippingTime: Int
    productAdded: Int   
}

extend type Query{
    products: [Product!]!
    getProductById(id: Int!): Product!
    getProductsByShop(shopID: Int!): [Product!]!
    getProductsTopDisc: [Product!]!
    getProductsByCategories(categoryId: Int!): [Product!]!
    getProductsSearch(search: String!, sort: String, input: Filter): [Product!]!
    getProductsMatch(search: String!): [Product!]!
    getBestSellingProducts(shopId: Int!): [Product!]!
}

input InsertMetaData{
    label: [String]!
    value: [String]!
}

extend type Mutation{
    insertProduct(shopId: Int!, name: String!, categoryId: Int!, images: [String!]!, description: String!, price: Int!, discount: Int, input: InsertMetaData!): Product!
    updateProduct(productId: Int!, shopId: Int!, name: String!, categoryId: Int!, images: [String!]!, description: String!, price: Int!, discount: Int, input: InsertMetaData!): Product!
    deleteProduct(productId: Int!): Product
}