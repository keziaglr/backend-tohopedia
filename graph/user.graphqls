scalar Date

type User {
    id: Int!
    name: String!
    email: String!
    password: String!
    dob: Date!
    gender: String!
    phoneNumber: String!
    profilePicture: String!
    isSuspend: Boolean!
    shippingAddress: String!
    role: String!

    Shop: Shop!
    Transactions: [TransactionHeader!]!
    Cart: [Cart!]!
    Voucher: [Voucher!]!
    Wishlist: [Product!]!
}

input RegisterUser {
    email: String!
    password: String!
}

input UpdateUser{
    profilePicture: String!
    name: String!
    dob: Date!
    gender: String!
    email: String!
    phoneNumber: String!
}

type Query {
    users: [User!]!
    getUserAuth(email: String!, password: String!): User!
}

type Mutation {
    createUser(input: RegisterUser!): User!
    updateUser(id: Int!, input: UpdateUser!): User!
}